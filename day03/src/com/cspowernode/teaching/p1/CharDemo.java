package com.cspowernode.teaching.p1;

/**
 * @author 汪洋
 * @Date 2023/3/6 10:30
 * @Description
 * char类型的使用
 * 1.在Java中，char类型代表字符，那么我们需要使用英文的单引号来引出你要使用的字符，至于字符可以是数字、
 * 字母、汉子以及其他的非文字性字符,记住单引号里面只能放一个字符；
 * 2.所有的数据都需要在内存中进行存储，那么字符类型是无法直接存储在内存中的，它是需要借助字符集来完成
 * 编码和解码的过程才能存储并进行使用，那么常见的字符集有如下几个：
 *  a、ASCII：美国信息交换标准代码，是基于拉丁字母的一套电脑编码系统，主要用于显示现代的英语和西欧语言
 *  的编码表。
 *  b、Unicode：又称为万国码、统一码，是为了解决传统的编码方案的局限性而产生的，他为每种语言中的每个字
 *  符设定了统一并且唯一的二进制编码，以满足跨语言、跨平台进行文本转换、处理的要求。Unicode编码，占2个
 *  字节，可允许有65536个字符，一个中文字符在内存中占用2个字节。它的前128位就是ASCII值
 *  c、GBK：全称《汉字内码扩展规范》，字库是用来表示中文用的编码。
 *  d、UTF-8：在全球码的基础上拓展了中文的非常用字符，并且设置了一个中文占据3个字符，是我们最常用的编码
 *  集；
 * 3.需要记住的几个ASCII码对应字符
 *  a、'0':48
 *  b、'a':97
 *  c、'A':65
 * 4.因为Java允许使用不同的编码集，默认是Unicode编码，所以我们在书写字符类型的数据的时候，就有多种写法：
 *  a、直接使用单引号来描述
 *  b、直接使用编码集中对应的十进制数字来书写
 *  c、因为有些unicode是用十六进制来存储的，所以我们可以使用反斜杠后面加u然后跟十六进制来描述
 */
public class CharDemo {
    public static void main(String[] args) {
        //1.char类型的基本使用
        char c1 = 'a';
        char c2 = '中';
        char c3 = '3';
        char c4 = ',';
        //2.Java中字符的多种写法
        //2.1.直接用单引号--->略
        //2.2.绕过编码集，直接使用编码集里面的十进制数字(ASCII)
        char c5 = 65;
        System.out.println(c5);
        //2.3.使用十六进制来书写具体的字符
        char c6 = '\u7F8E';
        System.out.println(c6);
        //2.4.把十六进制转为十进制
        char c7 = 32654;
        System.out.println(c7);
    }
}
